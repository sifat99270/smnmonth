// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model check{
  id Int @id @default(autoincrement())
 firstName String @db.VarChar(20)
 lastName String @db.VarChar(20)
 email String @unique
 password String @db.VarChar(50)
 otp String @db.VarChar(10)
  create DateTime @default(now()) @db.Timestamp(0)
 update DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model user{
 id Int @id @default(autoincrement())
 firstName String @db.VarChar(20)
 lastName String @db.VarChar(20)
 email String @unique
 password String @db.VarChar(50)
 otp String @db.VarChar(10)
 mounth mounth[]
 person person[]
 ip ip[]
 create DateTime @default(now()) @db.Timestamp(0)
 update DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
model ip{
  id Int @id @default(autoincrement())
  name String
  userId Int
  user user @relation(references: [id],fields: [userId],onUpdate: Cascade,onDelete: Restrict)
  create DateTime @default(now()) @db.Timestamp(0)
 update DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
model mounth{
  id Int @id @default(autoincrement())
  name String 
  userId Int
  user user @relation(fields: [userId],references: [id], onDelete: Restrict,onUpdate: Cascade)
  person person[]
  create DateTime @default(now()) @db.Timestamp(0)
  update DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model person{
  id Int @id @default(autoincrement())
  name String 
  hazira String @db.VarChar(5)
  rate String @db.VarChar(4)
  mot String @db.VarChar(10)
  khoraki String @db.VarChar(10)
  barti String @db.VarChar(10)
  gotoMAs String @default("") @db.VarChar(10)
  motAll String @db.VarChar(20)
  mounthId Int
  userId Int
  user user @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  mounth mounth @relation(fields: [mounthId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  create DateTime @default(now()) @db.Timestamp(0)
  update DateTime @default(now()) @updatedAt @db.Timestamp(0)
}